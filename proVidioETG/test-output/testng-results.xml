<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="28" total="51" passed="20" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-21T17:06:54 IST" name="ProvidioTestcases" finished-at="2023-08-21T17:48:27 IST" duration-ms="2492964">
    <groups>
    </groups>
    <test started-at="2023-08-21T17:06:54 IST" name="Automation" finished-at="2023-08-21T17:48:27 IST" duration-ms="2492964">
      <class name="com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser@42a940dc]" started-at="2023-08-21T17:14:58 IST" name="setUp" finished-at="2023-08-21T17:15:00 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser@42a940dc]" started-at="2023-08-21T17:15:00 IST" name="paypalFromCheckoutPage" finished-at="2023-08-21T17:18:01 IST" duration-ms="180990" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//input[@id ='cardNumber']"}
  (Session info: chrome=115.0.5790.173)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, findElement {using=xpath, value=//input[@id ='cardNumber']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@id ='cardNumber']"}
  (Session info: chrome=115.0.5790.173)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, findElement {using=xpath, value=//input[@id ='cardNumber']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.sendKeys(Unknown Source)
at com.providio.pageObjects.paymentpPage.latestcardnumber(paymentpPage.java:337)
at com.providio.paymentProccess.tc__CreditCardPaymentProcess.cyberSourceNewcard(tc__CreditCardPaymentProcess.java:163)
at com.providio.paymentProccess.tc__CreditCardPaymentProcess.paymentByCreditCard(tc__CreditCardPaymentProcess.java:95)
at com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser.paypalFromCheckoutPage(tc__PaymentProccessByGCandCC_GuestUser.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser@42a940dc]" started-at="2023-08-21T17:18:01 IST" name="afterMethod" finished-at="2023-08-21T17:18:01 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=FAILURE method=tc__PaymentProccessByGCandCC_GuestUser.paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser@42a940dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaymentProccessByGCandCC_GuestUser -->
      <class name="com.providio.payments.tc__PaypalFromViewCartPage_GuestUser">
        <test-method is-config="true" signature="setUpforReport()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_GuestUser@29050de5]" started-at="2023-08-21T17:06:50 IST" name="setUpforReport" finished-at="2023-08-21T17:06:54 IST" duration-ms="3722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpforReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_GuestUser@29050de5]" started-at="2023-08-21T17:06:54 IST" name="setUp" finished-at="2023-08-21T17:06:56 IST" duration-ms="2047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromViewCartPage()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_GuestUser@29050de5]" started-at="2023-08-21T17:06:56 IST" name="paypalFromViewCartPage" finished-at="2023-08-21T17:09:34 IST" duration-ms="157348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromViewCartPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_GuestUser@29050de5]" started-at="2023-08-21T17:09:34 IST" name="afterMethod" finished-at="2023-08-21T17:09:34 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromViewCartPage status=SUCCESS method=tc__PaypalFromViewCartPage_GuestUser.paypalFromViewCartPage()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_GuestUser@29050de5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_GuestUser@29050de5]" started-at="2023-08-21T17:48:28 IST" name="tearDown" finished-at="2023-08-21T17:48:39 IST" duration-ms="11852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.providio.payments.tc__PaypalFromViewCartPage_GuestUser -->
      <class name="com.providio.payments.tc__OrderByGc_GuestUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__OrderByGc_GuestUser@496d7bd9]" started-at="2023-08-21T17:21:19 IST" name="setUp" finished-at="2023-08-21T17:21:21 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paymentByGiftCardInGuestUser()[pri:0, instance:com.providio.payments.tc__OrderByGc_GuestUser@496d7bd9]" started-at="2023-08-21T17:21:21 IST" name="paymentByGiftCardInGuestUser" finished-at="2023-08-21T17:26:34 IST" duration-ms="313040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentByGiftCardInGuestUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__OrderByGc_GuestUser@496d7bd9]" started-at="2023-08-21T17:26:34 IST" name="afterMethod" finished-at="2023-08-21T17:26:34 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentByGiftCardInGuestUser status=SUCCESS method=tc__OrderByGc_GuestUser.paymentByGiftCardInGuestUser()[pri:0, instance:com.providio.payments.tc__OrderByGc_GuestUser@496d7bd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__OrderByGc_GuestUser -->
      <class name="com.providio.payments.tc__PaymentProccessByGCandPaypalGuestUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalGuestUser@4b6f196c]" started-at="2023-08-21T17:18:01 IST" name="setUp" finished-at="2023-08-21T17:18:03 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalGuestUser@4b6f196c]" started-at="2023-08-21T17:18:03 IST" name="paypalFromCheckoutPage" finished-at="2023-08-21T17:21:19 IST" duration-ms="196244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalGuestUser@4b6f196c]" started-at="2023-08-21T17:21:19 IST" name="afterMethod" finished-at="2023-08-21T17:21:19 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=SUCCESS method=tc__PaymentProccessByGCandPaypalGuestUser.paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalGuestUser@4b6f196c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaymentProccessByGCandPaypalGuestUser -->
      <class name="com.providio.payments.tc__PaymentProccessByGCandCC_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_RegUser@28bd399b]" started-at="2023-08-21T17:36:39 IST" name="setUp" finished-at="2023-08-21T17:36:41 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_RegUser@28bd399b]" started-at="2023-08-21T17:36:41 IST" name="paypalFromCheckoutPage" finished-at="2023-08-21T17:41:02 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="261215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_RegUser@28bd399b]" started-at="2023-08-21T17:41:02 IST" name="afterMethod" finished-at="2023-08-21T17:41:02 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=SUCCESS method=tc__PaymentProccessByGCandCC_RegUser.paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandCC_RegUser@28bd399b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaymentProccessByGCandCC_RegUser -->
      <class name="com.providio.payments.tc__PaypalCheckout_MiniCart_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_RegUser@22057f80]" started-at="2023-08-21T17:31:12 IST" name="setUp" finished-at="2023-08-21T17:31:14 IST" duration-ms="2020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalCheckout_MiniCart()[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_RegUser@22057f80]" started-at="2023-08-21T17:31:14 IST" name="paypalCheckout_MiniCart" finished-at="2023-08-21T17:33:05 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="110328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalCheckout_MiniCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_RegUser@22057f80]" started-at="2023-08-21T17:33:05 IST" name="afterMethod" finished-at="2023-08-21T17:33:05 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalCheckout_MiniCart status=SUCCESS method=tc__PaypalCheckout_MiniCart_RegUser.paypalCheckout_MiniCart()[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_RegUser@22057f80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaypalCheckout_MiniCart_RegUser -->
      <class name="com.providio.payments.tc__PaypalCheckout_MiniCart_GuestUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_GuestUser@65d23aa3]" started-at="2023-08-21T17:09:34 IST" name="setUp" finished-at="2023-08-21T17:09:36 IST" duration-ms="2017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalCheckout_MiniCart()[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_GuestUser@65d23aa3]" started-at="2023-08-21T17:09:36 IST" name="paypalCheckout_MiniCart" finished-at="2023-08-21T17:12:04 IST" duration-ms="148736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalCheckout_MiniCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_GuestUser@65d23aa3]" started-at="2023-08-21T17:12:04 IST" name="afterMethod" finished-at="2023-08-21T17:12:04 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalCheckout_MiniCart status=SUCCESS method=tc__PaypalCheckout_MiniCart_GuestUser.paypalCheckout_MiniCart()[pri:0, instance:com.providio.payments.tc__PaypalCheckout_MiniCart_GuestUser@65d23aa3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaypalCheckout_MiniCart_GuestUser -->
      <class name="com.providio.payments.tc__PaypalFromViewCartPage_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_RegUser@607624b7]" started-at="2023-08-21T17:29:24 IST" name="setUp" finished-at="2023-08-21T17:29:26 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromViewCartPage()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_RegUser@607624b7]" started-at="2023-08-21T17:29:26 IST" name="paypalFromViewCartPage" finished-at="2023-08-21T17:31:12 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="106027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromViewCartPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_RegUser@607624b7]" started-at="2023-08-21T17:31:12 IST" name="afterMethod" finished-at="2023-08-21T17:31:12 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromViewCartPage status=SUCCESS method=tc__PaypalFromViewCartPage_RegUser.paypalFromViewCartPage()[pri:0, instance:com.providio.payments.tc__PaypalFromViewCartPage_RegUser@607624b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaypalFromViewCartPage_RegUser -->
      <class name="com.providio.testcases.tc__LoginSc">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:26:34 IST" name="setUp" finished-at="2023-08-21T17:26:36 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="openBrowserandClickSignInButton()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:26:36 IST" name="openBrowserandClickSignInButton" finished-at="2023-08-21T17:26:47 IST" duration-ms="10790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserandClickSignInButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:26:47 IST" name="afterMethod" finished-at="2023-08-21T17:26:47 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openBrowserandClickSignInButton status=SUCCESS method=tc__LoginSc.openBrowserandClickSignInButton()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithEmptyEmail()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:26:47 IST" name="verifyLoginFailureWithEmptyEmail" finished-at="2023-08-21T17:27:14 IST" duration-ms="26418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithEmptyEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:27:14 IST" name="afterMethod" finished-at="2023-08-21T17:27:14 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithEmptyEmail status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithEmptyEmail()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithEmptyEmailAndPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:27:14 IST" name="verifyLoginFailureWithEmptyEmailAndPassword" finished-at="2023-08-21T17:27:38 IST" duration-ms="24445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithEmptyEmailAndPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:27:38 IST" name="afterMethod" finished-at="2023-08-21T17:27:38 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithEmptyEmailAndPassword status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithEmptyEmailAndPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithEmptyPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:27:38 IST" name="verifyLoginFailureWithEmptyPassword" finished-at="2023-08-21T17:27:59 IST" duration-ms="21379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithEmptyPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:27:59 IST" name="afterMethod" finished-at="2023-08-21T17:27:59 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithEmptyPassword status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithEmptyPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithIncorrectCredentials()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:27:59 IST" name="verifyLoginFailureWithIncorrectCredentials" finished-at="2023-08-21T17:28:21 IST" duration-ms="21602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithIncorrectCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:28:21 IST" name="afterMethod" finished-at="2023-08-21T17:28:21 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithIncorrectCredentials status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithIncorrectCredentials()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithIncorrectPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:28:21 IST" name="verifyLoginFailureWithIncorrectPassword" finished-at="2023-08-21T17:28:41 IST" duration-ms="20328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithIncorrectPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:28:41 IST" name="afterMethod" finished-at="2023-08-21T17:28:41 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithIncorrectPassword status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithIncorrectPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithInvalidEmailFormat()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:28:41 IST" name="verifyLoginFailureWithInvalidEmailFormat" finished-at="2023-08-21T17:29:03 IST" duration-ms="21410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithInvalidEmailFormat -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:29:03 IST" name="afterMethod" finished-at="2023-08-21T17:29:03 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithInvalidEmailFormat status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithInvalidEmailFormat()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifySuccessfulLogin()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:29:03 IST" name="verifySuccessfulLogin" finished-at="2023-08-21T17:29:24 IST" depends-on-methods="com.providio.testcases.testlogin.openBrowserandClickSignInButton" duration-ms="21395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a]" started-at="2023-08-21T17:29:24 IST" name="afterMethod" finished-at="2023-08-21T17:29:24 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=tc__LoginSc.verifySuccessfulLogin()[pri:0, instance:com.providio.testcases.tc__LoginSc@6e49d72a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.testcases.tc__LoginSc -->
      <class name="com.providio.testcases.tc__LogOut">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563]" started-at="2023-08-21T17:48:08 IST" name="setUp" finished-at="2023-08-21T17:48:10 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Logout()[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563]" started-at="2023-08-21T17:48:10 IST" name="Logout" finished-at="2023-08-21T17:48:26 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="15718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563]" started-at="2023-08-21T17:48:26 IST" name="afterMethod" finished-at="2023-08-21T17:48:26 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Logout status=SUCCESS method=tc__LogOut.Logout()[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Logout1()[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563]" started-at="2023-08-21T17:48:26 IST" name="Logout1" finished-at="2023-08-21T17:48:26 IST" duration-ms="19" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, actions {actions=[org.openqa.selenium.interactions.Sequence@6b8ef11f]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, actions {actions=[org.openqa.selenium.interactions.Sequence@6b8ef11f]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:362)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:154)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182)
at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:68)
at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278)
at org.openqa.selenium.json.Json.toJson(Json.java:42)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:259)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:122)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:181)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:611)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:567)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:536)
at com.providio.pageObjects.profilePage.howeraccount(profilePage.java:26)
at com.providio.testcases.tc__LogOut.Logout1(tc__LogOut.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:303)
at org.openqa.selenium.json.Json.toJson(Json.java:40)
... 39 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:358)
... 60 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@id='myaccount' and @aria-label ='My Account'])[1]"}
  (Session info: chrome=115.0.5790.173)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, findElement {using=xpath, value=(//a[@id='myaccount' and @aria-label ='My Account'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:269)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:218)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:73)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:82)
... 65 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563]" started-at="2023-08-21T17:48:26 IST" name="afterMethod" finished-at="2023-08-21T17:48:27 IST" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Logout1 status=FAILURE method=tc__LogOut.Logout1()[pri:0, instance:com.providio.testcases.tc__LogOut@745eb563] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.testcases.tc__LogOut -->
      <class name="com.providio.payments.tc__PaypalFromCheckoutPage_GuestUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_GuestUser@3338d29d]" started-at="2023-08-21T17:12:04 IST" name="setUp" finished-at="2023-08-21T17:12:06 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_GuestUser@3338d29d]" started-at="2023-08-21T17:12:06 IST" name="paypalFromCheckoutPage" finished-at="2023-08-21T17:14:58 IST" duration-ms="171408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_GuestUser@3338d29d]" started-at="2023-08-21T17:14:58 IST" name="afterMethod" finished-at="2023-08-21T17:14:58 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=SUCCESS method=tc__PaypalFromCheckoutPage_GuestUser.paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_GuestUser@3338d29d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaypalFromCheckoutPage_GuestUser -->
      <class name="com.providio.payments.tc__OrderByGc_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__OrderByGc_RegUser@793de73f]" started-at="2023-08-21T17:45:17 IST" name="setUp" finished-at="2023-08-21T17:45:19 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="orderByGc_RegUser()[pri:0, instance:com.providio.payments.tc__OrderByGc_RegUser@793de73f]" started-at="2023-08-21T17:45:19 IST" name="orderByGc_RegUser" finished-at="2023-08-21T17:48:08 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="169277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderByGc_RegUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__OrderByGc_RegUser@793de73f]" started-at="2023-08-21T17:48:08 IST" name="afterMethod" finished-at="2023-08-21T17:48:08 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderByGc_RegUser status=SUCCESS method=tc__OrderByGc_RegUser.orderByGc_RegUser()[pri:0, instance:com.providio.payments.tc__OrderByGc_RegUser@793de73f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__OrderByGc_RegUser -->
      <class name="com.providio.payments.tc__PaypalFromPDPpage_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalFromPDPpage_RegUser@1aa42c5c]" started-at="2023-08-21T17:35:30 IST" name="setUp" finished-at="2023-08-21T17:35:32 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromPDPpage()[pri:0, instance:com.providio.payments.tc__PaypalFromPDPpage_RegUser@1aa42c5c]" started-at="2023-08-21T17:35:32 IST" name="paypalFromPDPpage" finished-at="2023-08-21T17:36:39 IST" duration-ms="66624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromPDPpage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalFromPDPpage_RegUser@1aa42c5c]" started-at="2023-08-21T17:36:39 IST" name="afterMethod" finished-at="2023-08-21T17:36:39 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromPDPpage status=SUCCESS method=tc__PaypalFromPDPpage_RegUser.paypalFromPDPpage()[pri:0, instance:com.providio.payments.tc__PaypalFromPDPpage_RegUser@1aa42c5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaypalFromPDPpage_RegUser -->
      <class name="com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser@62514f38]" started-at="2023-08-21T17:41:02 IST" name="setUp" finished-at="2023-08-21T17:41:04 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser@62514f38]" started-at="2023-08-21T17:41:04 IST" name="paypalFromCheckoutPage" finished-at="2023-08-21T17:45:17 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="252894" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[contains(text(), 'Next: Review Order')]"}
  (Session info: chrome=115.0.5790.173)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, findElement {using=xpath, value=//button[contains(text(), 'Next: Review Order')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[contains(text(), 'Next: Review Order')]"}
  (Session info: chrome=115.0.5790.173)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [817a32bc9e86292f0ee8a10a9457ca85, findElement {using=xpath, value=//button[contains(text(), 'Next: Review Order')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.173, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 115.0.5790.173, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 817a32bc9e86292f0ee8a10a9457ca85
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.providio.paymentProccess.tc__CheckOutProcessByPayPal.checkoutprocessFromCheckout(tc__CheckOutProcessByPayPal.java:196)
at com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser.paypalFromCheckoutPage(tc__PaymentProccessByGCandPaypalRegUser.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser@62514f38]" started-at="2023-08-21T17:45:17 IST" name="afterMethod" finished-at="2023-08-21T17:45:17 IST" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=FAILURE method=tc__PaymentProccessByGCandPaypalRegUser.paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser@62514f38] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaymentProccessByGCandPaypalRegUser -->
      <class name="com.providio.payments.tc__PaypalFromCheckoutPage_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_RegUser@4e29ec7]" started-at="2023-08-21T17:33:05 IST" name="setUp" finished-at="2023-08-21T17:33:07 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_RegUser@4e29ec7]" started-at="2023-08-21T17:33:07 IST" name="paypalFromCheckoutPage" finished-at="2023-08-21T17:35:30 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="143191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_RegUser@4e29ec7]" started-at="2023-08-21T17:35:30 IST" name="afterMethod" finished-at="2023-08-21T17:35:30 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=SUCCESS method=tc__PaypalFromCheckoutPage_RegUser.paypalFromCheckoutPage()[pri:0, instance:com.providio.payments.tc__PaypalFromCheckoutPage_RegUser@4e29ec7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.providio.payments.tc__PaypalFromCheckoutPage_RegUser -->
    </test> <!-- Automation -->
  </suite> <!-- ProvidioTestcases -->
</testng-results>
