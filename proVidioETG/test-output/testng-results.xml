<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="14" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-11T19:41:10 IST" name="ProvidioTestcases" finished-at="2023-09-11T19:47:01 IST" duration-ms="351367">
    <groups>
    </groups>
    <test started-at="2023-09-11T19:41:10 IST" name="Automation" finished-at="2023-09-11T19:47:01 IST" duration-ms="351367">
      <class name="com.RegUserWith_Checkout_Paypal.tc__PaypalFromCheckoutPage_RegUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.RegUserWith_Checkout_Paypal.tc__PaypalFromCheckoutPage_RegUser@224d537d]" started-at="2023-09-11T19:44:00 IST" name="setUp" finished-at="2023-09-11T19:44:02 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="paypalFromCheckoutPage()[pri:0, instance:com.RegUserWith_Checkout_Paypal.tc__PaypalFromCheckoutPage_RegUser@224d537d]" started-at="2023-09-11T19:44:02 IST" name="paypalFromCheckoutPage" finished-at="2023-09-11T19:45:31 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="89336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paypalFromCheckoutPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.RegUserWith_Checkout_Paypal.tc__PaypalFromCheckoutPage_RegUser@224d537d]" started-at="2023-09-11T19:45:31 IST" name="afterMethod" finished-at="2023-09-11T19:45:31 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paypalFromCheckoutPage status=SUCCESS method=tc__PaypalFromCheckoutPage_RegUser.paypalFromCheckoutPage()[pri:0, instance:com.RegUserWith_Checkout_Paypal.tc__PaypalFromCheckoutPage_RegUser@224d537d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.RegUserWith_Checkout_Paypal.tc__PaypalFromCheckoutPage_RegUser -->
      <class name="com.RegUserWith_CreditCard.tc__OnlyGiftCards_Reg_InCC">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.RegUserWith_CreditCard.tc__OnlyGiftCards_Reg_InCC@9e4388d]" started-at="2023-09-11T19:45:31 IST" name="setUp" finished-at="2023-09-11T19:45:33 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="OnlyGiftCards()[pri:0, instance:com.RegUserWith_CreditCard.tc__OnlyGiftCards_Reg_InCC@9e4388d]" started-at="2023-09-11T19:45:33 IST" name="OnlyGiftCards" finished-at="2023-09-11T19:47:01 IST" depends-on-methods="com.providio.testcases.tc__LoginSc.verifySuccessfulLogin" duration-ms="88218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnlyGiftCards -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.RegUserWith_CreditCard.tc__OnlyGiftCards_Reg_InCC@9e4388d]" started-at="2023-09-11T19:47:01 IST" name="afterMethod" finished-at="2023-09-11T19:47:01 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OnlyGiftCards status=SUCCESS method=tc__OnlyGiftCards_Reg_InCC.OnlyGiftCards()[pri:0, instance:com.RegUserWith_CreditCard.tc__OnlyGiftCards_Reg_InCC@9e4388d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.RegUserWith_CreditCard.tc__OnlyGiftCards_Reg_InCC -->
      <class name="com.providio.testcases.tc__LoginSc">
        <test-method is-config="true" signature="setUpforReport()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:08 IST" name="setUpforReport" finished-at="2023-09-11T19:41:10 IST" duration-ms="2542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpforReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:10 IST" name="setUp" finished-at="2023-09-11T19:41:12 IST" duration-ms="2043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="openBrowserandClickSignInButton()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:12 IST" name="openBrowserandClickSignInButton" finished-at="2023-09-11T19:41:23 IST" duration-ms="10753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserandClickSignInButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:23 IST" name="afterMethod" finished-at="2023-09-11T19:41:23 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openBrowserandClickSignInButton status=SUCCESS method=tc__LoginSc.openBrowserandClickSignInButton()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithEmptyEmail()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:23 IST" name="verifyLoginFailureWithEmptyEmail" finished-at="2023-09-11T19:41:49 IST" duration-ms="26414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithEmptyEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:49 IST" name="afterMethod" finished-at="2023-09-11T19:41:49 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithEmptyEmail status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithEmptyEmail()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithEmptyEmailAndPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:41:49 IST" name="verifyLoginFailureWithEmptyEmailAndPassword" finished-at="2023-09-11T19:42:14 IST" duration-ms="24362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithEmptyEmailAndPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:42:14 IST" name="afterMethod" finished-at="2023-09-11T19:42:14 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithEmptyEmailAndPassword status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithEmptyEmailAndPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithEmptyPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:42:14 IST" name="verifyLoginFailureWithEmptyPassword" finished-at="2023-09-11T19:42:35 IST" duration-ms="21303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithEmptyPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:42:35 IST" name="afterMethod" finished-at="2023-09-11T19:42:35 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithEmptyPassword status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithEmptyPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithIncorrectCredentials()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:42:35 IST" name="verifyLoginFailureWithIncorrectCredentials" finished-at="2023-09-11T19:42:57 IST" duration-ms="21431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithIncorrectCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:42:57 IST" name="afterMethod" finished-at="2023-09-11T19:42:57 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithIncorrectCredentials status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithIncorrectCredentials()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithIncorrectPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:42:57 IST" name="verifyLoginFailureWithIncorrectPassword" finished-at="2023-09-11T19:43:17 IST" duration-ms="20403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithIncorrectPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:43:17 IST" name="afterMethod" finished-at="2023-09-11T19:43:17 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithIncorrectPassword status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithIncorrectPassword()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyLoginFailureWithInvalidEmailFormat()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:43:17 IST" name="verifyLoginFailureWithInvalidEmailFormat" finished-at="2023-09-11T19:43:38 IST" duration-ms="21462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFailureWithInvalidEmailFormat -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:43:38 IST" name="afterMethod" finished-at="2023-09-11T19:43:38 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFailureWithInvalidEmailFormat status=SUCCESS method=tc__LoginSc.verifyLoginFailureWithInvalidEmailFormat()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifySuccessfulLogin()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:43:38 IST" name="verifySuccessfulLogin" finished-at="2023-09-11T19:44:00 IST" depends-on-methods="com.providio.testcases.testlogin.openBrowserandClickSignInButton" duration-ms="21425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:44:00 IST" name="afterMethod" finished-at="2023-09-11T19:44:00 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=tc__LoginSc.verifySuccessfulLogin()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.providio.testcases.tc__LoginSc@1290ed28]" started-at="2023-09-11T19:47:02 IST" name="tearDown" finished-at="2023-09-11T19:47:12 IST" duration-ms="10733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.providio.testcases.tc__LoginSc -->
    </test> <!-- Automation -->
  </suite> <!-- ProvidioTestcases -->
</testng-results>
